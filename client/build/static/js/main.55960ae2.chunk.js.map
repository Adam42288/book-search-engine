{"version":3,"sources":["utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/SearchBooks.js","utils/API.js","utils/queries.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","removeBookId","bookId","savedBookIds","JSON","parse","updatedSavedBookIds","filter","savedBookId","stringify","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","SAVE_BOOK","_templateObject3","REMOVE_BOOK","_templateObject4","SearchBooks","_useState","useState","_useState2","_slicedToArray","searchedBooks","setSearchedBooks","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","setSavedBookIds","_useMutation","useMutation","_useMutation2","saveBook","error","useEffect","bookIdArr","length","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","_yield$response$json","items","bookData","wrap","_context","prev","next","preventDefault","abrupt","fetch","concat","sent","ok","Error","json","map","book","_book$volumeInfo$imag","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","t0","console","stop","_x","apply","arguments","handleSaveBook","_ref2","_callee2","bookToSave","_yield$saveBook","_context2","find","Auth","loggedIn","variables","_objectSpread","data","_toConsumableArray","_x2","_jsxs","_Fragment","children","_jsx","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","GET_ME","SavedBooks","_useQuery","useQuery","loading","removeBook","userData","me","userDataLength","Object","keys","handleDeleteBook","_yield$removeBook","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","addUser","validated","showAlert","setShowAlert","handleInputChange","_event$target","_defineProperty","_yield$addUser","currentTarget","checkValidity","stopPropagation","log","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","_yield$login","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","SignUpForm","App","Router","Routes","Route","exact","path","element","render","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55960ae2.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import { gql } from \"@apollo/client\";\n\n//            onChange={handleInputChange}\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\n//            onChange={handleInputChange}\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n//          />\nexport const SAVE_BOOK = gql`\n  mutation saveBook($input: savedBook!) {\n    saveBook(input: $input) {\n      _id\n      username\n      email\n      bookCount\n      savedBooks {\n        # _id\n        bookId\n        authors\n        image\n        link\n        title\n        description\n      }\n    }\n  }\n`;\n//         />\nexport const REMOVE_BOOK = gql`\n  mutation removeBook($bookId: ID!) {\n    removeBook(bookId: $bookId) {\n      _id\n      username\n      email\n      bookCount\n      savedBooks {\n        # _id\n        bookId\n        authors\n        image\n        link\n        title\n        description\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\nimport { saveBook, searchGoogleBooks } from \"../utils/API\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\n\n// import { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    // console.log(searchInput);\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { items } = await response.json();\n      // console.log(items);\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || [\"No author to display\"],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveBook({\n        variables: { bookData: { ...bookToSave } },\n      });\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div fluid className=\"jumbotron text-light bg-dark\">\n        <Container>\n          <h1>Search for Books</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </div>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : \"Search for a book to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )\n                        ? \"This book has already been saved!\"\n                        : \"Save this Book!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","import { gql } from \"@apollo/client\";\n\n//        link\n//       title\n//       description\nexport const GET_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      savedBooks {\n        bookId\n        authors\n        image\n        description\n        title\n        link\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport { getMe, deleteBook } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport { GET_ME } from \"../utils/queries\";\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.me || {};\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n    // console.log(bookId);\n    try {\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>Loading</h2>;\n  }\n\n  return (\n    <>\n      <div fluid className=\"jumbotron text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books</h1>\n        </Container>\n      </div>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set mutation\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  // update state based on form input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // try to login\n    try {\n      console.log(userFormData);\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;","// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\n// import { useMutation } from '@apollo/client';\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n\n  // update state based on form input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // try to login\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n      console.log(data);\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar' className='d-flex flex-row-reverse'>\n            <Nav className='ml-auto d-flex'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport SavedBooks from \"./pages/SavedBooks\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<SearchBooks />} />\n          <Route exact path=\"/saved\" element={<SavedBooks />} />\n          <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n        </Routes>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}